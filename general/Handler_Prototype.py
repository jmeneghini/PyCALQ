#### need  a data handler 

# this is Andre's for some ideas
# i like the debug (This is  amust) Need to implement Warning library
# save is good option
# GEVP parameters
# handler will find these params, some automatic.
def params():
    """
    debug: [True/False] turns on/off detailed print and plotting statements.
    fpath: [dictionary of strings] path 50 hdf5 files

    save: [True/False] save fit result

    t0: time slice of matrix A for GEVP
    td: time slice of matrix B for GEVP

    autotime: time slice used to read meff and zeff to set automatic priors and determine ratio denominator.
    positive_z: [True/False] parameterize overlap as z^2 (true) or z (false)

    ratio: [True/False] Fit NN to ratio?
    ratio_type: [data / fit] Divide by data or g.s. fit?
    nstate: [int] number of states for corr fit
    trange: [int, int] tmin and tmax (inclusive)
    masterkey: [[]] a list of lists for chain fitting.
               The order of lists is the order of the chained fit.
               Probably more sensible to do single nucleon fits first.
    """
    p = dict()
    p["debug"] = True
    p["latex"] = True
    p["fpath"] = {"nucleon": "./data/cls21_c103_r005-8_nucleon_S0.hdf5", "singlet": "./data/cls21_c103_r005-8_singlet_S0_avg_mom.hdf5"}

    p["save"] = True
    p["fitter"] = 'scipy_least_squares'

    p["t0"] = 5
    p["td"] = 10

    p["autotime"] = 10
    p["positive_z"] = False
    p["gs_factorize"] = True

    p["ratio"] = True
    p["ratio_type"] = "data"
    p["nstates"] = 5
    p["trange"]  = [4, 20]
    p["ampi"]    = 0.310810

    p["masterkey"] = [["0"], ["1"], ["2"], ["3"], ["4"], ["5F1"], ["5F2"]]#,
                      #[("0", "T1g", 0)], [('4', 'A2', 0)]] #, [('0', 'T1g', 1)], [('0', 'T1g', 2)], [('0', 'T1g', 3)], [('0', 'T1g', 4)],
                      #[('0', 'T1g', 5)], [('0', 'T1g', 6)], [('0', 'T1g', 7)], [('0', 'T1g', 8)], [('0', 'T1g', 9)],
                      #[('0', 'T1g', 10)], [('0', 'T1g', 11)], [('0', 'T1g', 12)], [('0', 'T1g', 13)],
                      #[('0', 'T1g', 14)],
                      #[('0', 'A1g')],
                      #[('0', 'A2u')],
                      #[('1', 'A1', 0)], [('1', 'A1', 1)], [('1', 'A1', 2)], [('1', 'A1', 3)], [('1', 'A1', 4)],
                      #[('1', 'A1', 5)], [('1', 'A1', 6)], [('1', 'A1', 7)], [('1', 'A1', 8)], [('1', 'A1', 9)],
                      #[('2', 'A1', 0)], [('2', 'A1', 1)], [('2', 'A1', 2)], [('2', 'A1', 3)], [('2', 'A1', 4)],
                      #[('2', 'A1', 5)], [('2', 'A1', 6)], [('2', 'A1', 7)], [('2', 'A1', 8)], [('2', 'A1', 9)],
                      #[('2', 'A1', 10)], [('2', 'A1', 11)], [('2', 'A1', 12)],
                      #[('3', 'A1', 0)], [('3', 'A1', 1)], [('3', 'A1', 2)], [('3', 'A1', 3)], [('3', 'A1', 4)],
                      #[('3', 'A1', 5)], [('3', 'A1', 6)], [('3', 'A1', 7)], [('3', 'A1', 8)],
                      #[('4', 'A1', 0)], [('4', 'A1', 1)], [('4', 'A1', 2)],
                      #[('1', 'A2', 0)], [('1', 'A2', 1)], [('1', 'A2', 2)], [('1', 'A2', 3)], [('1', 'A2', 4)],
                      #[('1', 'A2', 5)], [('1', 'A2', 6)], [('1', 'A2', 7)], [('1', 'A2', 8)], [('1', 'A2', 9)],
                      #[('2', 'A2', 0)], [('2', 'A2', 1)], [('2', 'A2', 2)], [('2', 'A2', 3)], [('2', 'A2', 4)],
                      #[('2', 'A2', 5)], [('2', 'A2', 6)], [('2', 'A2', 7)], [('2', 'A2', 8)], [('2', 'A2', 9)],
                      #[('2', 'A2', 10)], [('2', 'A2', 11)], [('2', 'A2', 12)], [('2', 'A2', 13)], [('2', 'A2', 14)],
                      #[('3', 'A2', 0)], [('3', 'A2', 1)], [('3', 'A2', 2)], [('3', 'A2', 3)], [('3', 'A2', 4)],
                      #[('3', 'A2', 5)], [('3', 'A2', 6)], [('3', 'A2', 7)], [('3', 'A2', 8)],
                      #[('4', 'A2', 0)], [('4', 'A2', 1)], [('4', 'A2', 2)], [('4', 'A2', 3)], [('4', 'A2', 4)],
                      #[('4', 'A2', 5)], [('4', 'A2', 6)],
                      #[('0', 'A2g', 0)], [('0', 'A2g', 1)], [('0', 'A2g', 2)],
                      #[('1', 'B1', 0)], [('1', 'B1', 1)], [('1', 'B1', 2)], [('1', 'B1', 3)], [('1', 'B1', 4)],
                      #[('1', 'B1', 5)], [('1', 'B1', 6)], [('1', 'B1', 7)],
                      #[('2', 'B1', 0)], [('2', 'B1', 1)], [('2', 'B1', 2)], [('2', 'B1', 3)], [('2', 'B1', 4)],
                      #[('2', 'B1', 5)], [('2', 'B1', 6)], [('2', 'B1', 7)], [('2', 'B1', 8)], [('2', 'B1', 9)],
                      #[('2', 'B1', 10)], [('2', 'B1', 11)], [('2', 'B1', 12)], [('2', 'B1', 13)], [('2', 'B1', 14)],
                      #[('2', 'B1', 15)], [('2', 'B1', 16)], [('2', 'B1', 17)], [('2', 'B1', 18)],
                      #[('4', 'B1', 0)], [('4', 'B1', 1)], [('4', 'B1', 2)],
                      #[('1', 'B2', 0)], [('1', 'B2', 1)], [('1', 'B2', 2)], [('1', 'B2', 3)], [('1', 'B2', 4)],
                      #[('1', 'B2', 5)], [('1', 'B2', 6)], [('1', 'B2', 7)],
                      #[('2', 'B2', 0)], [('2', 'B2', 1)], [('2', 'B2', 2)], [('2', 'B2', 3)], [('2', 'B2', 4)],
                      #[('2', 'B2', 5)], [('2', 'B2', 6)], [('2', 'B2', 7)], [('2', 'B2', 8)], [('2', 'B2', 9)],
                      #[('2', 'B2', 10)], [('2', 'B2', 11)], [('2', 'B2', 12)], [('2', 'B2', 13)], [('2', 'B2', 14)],
                      #[('2', 'B2', 15)], [('2', 'B2', 16)], [('2', 'B2', 17)], [('2', 'B2', 18)], [('2', 'B2', 19)],
                      #[('2', 'B2', 20)],
                      #[('4', 'B2', 0)], [('4', 'B2', 1)], [('4', 'B2', 2)], [('4', 'B2', 3)],
                      #[('1', 'E', 0)], [('1', 'E', 1)], [('1', 'E', 2)], [('1', 'E', 3)], [('1', 'E', 4)],
                      #[('1', 'E', 5)], [('1', 'E', 6)], [('1', 'E', 7)], [('1', 'E', 8)], [('1', 'E', 9)],
                      #[('1', 'E', 10)], [('1', 'E', 11)], [('1', 'E', 12)], [('1', 'E', 13)], [('1', 'E', 14)],
                      #[('1', 'E', 15)], [('1', 'E', 16)], [('1', 'E', 17)],
                      #[('3', 'E', 0)], [('3', 'E', 1)], [('3', 'E', 2)], [('3', 'E', 3)], [('3', 'E', 4)],
                      #[('3', 'E', 5)], [('3', 'E', 6)], [('3', 'E', 7)], [('3', 'E', 8)], [('3', 'E', 9)],
                      #[('3', 'E', 10)], [('3', 'E', 11)], [('3', 'E', 12)], [('3', 'E', 13)], [('3', 'E', 14)],
                      #[('3', 'E', 15)], [('3', 'E', 16)],
                      #[('4', 'E', 0)], [('4', 'E', 1)], [('4', 'E', 2)], [('4', 'E', 3)], [('4', 'E', 4)],
                      #[('4', 'E', 5)], [('4', 'E', 6)], [('4', 'E', 7)], [('4', 'E', 8)], [('4', 'E', 9)],
                      #[('4', 'E', 10)], [('4', 'E', 11)], [('4', 'E', 12)], [('4', 'E', 13)], [('4', 'E', 14)],
                      #[('0', 'Eg', 0)], [('0', 'Eg', 1)], [('0', 'Eg', 2)], [('0', 'Eg', 3)],
                      #[('0', 'T1u', 0)], [('0', 'T1u', 1)], [('0', 'T1u', 2)], [('0', 'T1u', 3)], [('0', 'T1u', 4)],
                      #[('0', 'T1u', 5)],
                      #[('0', 'T2g', 0)], [('0', 'T2g', 1)], [('0', 'T2g', 2)], [('0', 'T2g', 3)], [('0', 'T2g', 4)],
                      #[('0', 'T2g', 5)], [('0', 'T2g', 6)], [('0', 'T2g', 7)], [('0', 'T2g', 8)], [('0', 'T2g', 9)],
                      #[('0', 'T2u', 0)], [('0', 'T2u', 1)], [('0', 'T2u', 2)]]

    return p
